; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\demo_spi_ad7606.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\demo_spi_ad7606.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -ID:\Study_software\Keil_v5\ARM\Packs\ARM\CMSIS\6.1.0\CMSIS\Core\Include -ID:\Study_software\Keil_v5\ARM\Packs\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=541 -DSTM32F10X_HD -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\demo_spi_ad7606.crf ..\..\User\app\src\demo_spi_ad7606.c]
                          THUMB

                          AREA ||i.AD7606_Disp||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_x
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_longlong_hex
                  AD7606_Disp PROC
;;;134    */
;;;135    void AD7606_Disp(void)
000000  e92d47ff          PUSH     {r0-r10,lr}
;;;136    {
;;;137    	int16_t i;	
;;;138    	int16_t iTemp;
;;;139    
;;;140    	/* 打印采集数据 */
;;;141    	for (i = 0; i < CH_NUM; i++)
;;;142    	{                
;;;143       		iTemp = s_volt[i];	/* uV  */
000004  f8df90a8          LDR      r9,|L1.176|
000008  2400              MOVS     r4,#0                 ;141
;;;144    		
;;;145    		if (s_dat[i] < 0)
00000a  f1090710          ADD      r7,r9,#0x10
;;;146    		{
;;;147    			iTemp = -iTemp;
;;;148                printf(" CH%d = %6d,0x%04X (-%d.%d%d%d V) \r\n", i+1, s_dat[i], (uint16_t)s_dat[i], iTemp /1000, (iTemp%1000)/100, (iTemp%100)/10,iTemp%10);
00000e  f04f080a          MOV      r8,#0xa
000012  2564              MOVS     r5,#0x64
000014  f44f767a          MOV      r6,#0x3e8
                  |L1.24|
000018  f9372014          LDRSH    r2,[r7,r4,LSL #1]     ;145
00001c  f9390014          LDRSH    r0,[r9,r4,LSL #1]     ;143
000020  2a00              CMP      r2,#0                 ;145
000022  da1d              BGE      |L1.96|
000024  4240              RSBS     r0,r0,#0              ;147
000026  b200              SXTH     r0,r0                 ;147
000028  46c4              MOV      r12,r8
00002a  fb90f1fc          SDIV     r1,r0,r12
00002e  fb080311          MLS      r3,r8,r1,r0
000032  fb90f1f5          SDIV     r1,r0,r5
000036  fb90fcf6          SDIV     r12,r0,r6
00003a  fb050111          MLS      r1,r5,r1,r0
00003e  fb060c1c          MLS      r12,r6,r12,r0
000042  fb91f1f8          SDIV     r1,r1,r8
000046  fb9cfcf5          SDIV     r12,r12,r5
00004a  fb90f0f6          SDIV     r0,r0,r6
00004e  e9cd1302          STRD     r1,r3,[sp,#8]
000052  e9cd0c00          STRD     r0,r12,[sp,#0]
000056  f8373014          LDRH     r3,[r7,r4,LSL #1]
00005a  1c61              ADDS     r1,r4,#1
00005c  a015              ADR      r0,|L1.180|
00005e  e019              B        |L1.148|
                  |L1.96|
;;;149    		}
;;;150    		else
;;;151    		{
;;;152             	printf(" CH%d = %6d,0x%04X ( %d.%d%d%d V) \r\n", i+1, s_dat[i], s_dat[i] , iTemp /1000, (iTemp%1000)/100, (iTemp%100)/10,iTemp%10);                    
000060  4641              MOV      r1,r8
000062  fb90f3f1          SDIV     r3,r0,r1
000066  fb90fcf5          SDIV     r12,r0,r5
00006a  fb050c1c          MLS      r12,r5,r12,r0
00006e  fb9cf1f8          SDIV     r1,r12,r8
000072  fb90fcf6          SDIV     r12,r0,r6
000076  fb060c1c          MLS      r12,r6,r12,r0
00007a  fb080313          MLS      r3,r8,r3,r0
00007e  fb9cfcf5          SDIV     r12,r12,r5
000082  fb90f0f6          SDIV     r0,r0,r6
000086  e9cd1302          STRD     r1,r3,[sp,#8]
00008a  e9cd0c00          STRD     r0,r12,[sp,#0]
00008e  4613              MOV      r3,r2
000090  1c61              ADDS     r1,r4,#1
000092  a012              ADR      r0,|L1.220|
                  |L1.148|
000094  f7fffffe          BL       __2printf
000098  1c64              ADDS     r4,r4,#1
00009a  b224              SXTH     r4,r4                 ;141
00009c  2c08              CMP      r4,#8                 ;141
00009e  dbbb              BLT      |L1.24|
;;;153    		}
;;;154    	}
;;;155    	printf("\33[%dA", (int)CH_NUM);  /* 光标上移n行 */		
0000a0  b004              ADD      sp,sp,#0x10
0000a2  2108              MOVS     r1,#8
0000a4  e8bd47f0          POP      {r4-r10,lr}
0000a8  a016              ADR      r0,|L1.260|
0000aa  f7ffbffe          B.W      __2printf
;;;156    }
;;;157    
                          ENDP

0000ae  0000              DCW      0x0000
                  |L1.176|
                          DCD      ||.bss||
                  |L1.180|
0000b4  20434825          DCB      " CH%d = %6d,0x%04X (-%d.%d%d%d V) \r\n",0
0000b8  64203d20
0000bc  2536642c
0000c0  30782530
0000c4  34582028
0000c8  2d25642e
0000cc  25642564
0000d0  25642056
0000d4  29200d0a
0000d8  00      
0000d9  00                DCB      0
0000da  00                DCB      0
0000db  00                DCB      0
                  |L1.220|
0000dc  20434825          DCB      " CH%d = %6d,0x%04X ( %d.%d%d%d V) \r\n",0
0000e0  64203d20
0000e4  2536642c
0000e8  30782530
0000ec  34582028
0000f0  2025642e
0000f4  25642564
0000f8  25642056
0000fc  29200d0a
000100  00      
000101  00                DCB      0
000102  00                DCB      0
000103  00                DCB      0
                  |L1.260|
000104  1b5b2564          DCB      27,"[%dA",0
000108  4100    
00010a  00                DCB      0
00010b  00                DCB      0

                          AREA ||i.Demo_spi_AD7606||, CODE, READONLY, ALIGN=2

                  Demo_spi_AD7606 PROC
;;;35     */
;;;36     void Demo_spi_AD7606(void)
000000  4d29              LDR      r5,|L2.168|
;;;37     {
000002  b508              PUSH     {r3,lr}
;;;38     	uint8_t cmd;
;;;39     
;;;40     	/*
;;;41     		由于ST固件库的启动文件已经执行了CPU系统时钟的初始化，所以不必再次重复配置系统时钟。
;;;42     		启动文件配置了CPU主时钟频率、内部Flash访问速度和可选的外部SRAM FSMC初始化。
;;;43     	*/
;;;44     	g_tAD7606.Range = 1;	/* 10V */
000004  f04f0901          MOV      r9,#1
000008  f8859000          STRB     r9,[r5,#0]
;;;45     
;;;46     	bsp_spi_InitAD7606();	/* 配置AD7606所用的GPIO */
00000c  f7fffffe          BL       bsp_spi_InitAD7606
;;;47     
;;;48     	bsp_StartAutoTimer(0, 500);	/* 启动1个500ms的自动重装的定时器 */
000010  f44f71fa          MOV      r1,#0x1f4
000014  2000              MOVS     r0,#0
000016  f7fffffe          BL       bsp_StartAutoTimer
;;;49     
;;;50     	DispMenu();			/* 显示操作菜单 */	
00001a  f7fffffe          BL       DispMenu
00001e  f8df808c          LDR      r8,|L2.172|
000022  f64776ff          MOV      r6,#0x7fff
;;;51     	while (1)
;;;52     	{
;;;53     		bsp_Idle();		/* 空闲时执行的函数,比如喂狗. 在bsp.c中 */
000026  bf00              NOP      
                  |L2.40|
000028  f7fffffe          BL       bsp_Idle
;;;54     
;;;55     		if (bsp_CheckTimer(0))
00002c  2000              MOVS     r0,#0
00002e  f7fffffe          BL       bsp_CheckTimer
000032  b1c0              CBZ      r0,|L2.102|
;;;56     		{	
;;;57     			/* 每隔500ms 进来一次. 由软件启动转换 */
;;;58     			AD7606_Scan();
000034  f7fffffe          BL       AD7606_Scan
000038  4f1c              LDR      r7,|L2.172|
00003a  2400              MOVS     r4,#0
00003c  3710              ADDS     r7,r7,#0x10
                  |L2.62|
00003e  4620              MOV      r0,r4
000040  f7fffffe          BL       AD7606_ReadAdc
000044  f8270014          STRH     r0,[r7,r4,LSL #1]
000048  7829              LDRB     r1,[r5,#0]  ; g_tAD7606
00004a  b1c9              CBZ      r1,|L2.128|
00004c  f2427110          MOV      r1,#0x2710
000050  4348              MULS     r0,r1,r0
000052  fb90f0f6          SDIV     r0,r0,r6
000056  f8280014          STRH     r0,[r8,r4,LSL #1]
                  |L2.90|
00005a  1c64              ADDS     r4,r4,#1
00005c  b2e4              UXTB     r4,r4
00005e  2c08              CMP      r4,#8
000060  d3ed              BCC      |L2.62|
;;;59     		
;;;60     			/* 处理数据 */
;;;61     			AD7606_Mak();
;;;62     										 
;;;63     			/* 打印ADC采样结果 */
;;;64     			AD7606_Disp();		
000062  f7fffffe          BL       AD7606_Disp
                  |L2.102|
;;;65     		}
;;;66     		
;;;67     		if (comGetChar(COM1, &cmd))	/* 从串口读入一个字符(非阻塞方式) */
000066  4669              MOV      r1,sp
000068  2000              MOVS     r0,#0
00006a  f7fffffe          BL       comGetChar
00006e  2800              CMP      r0,#0
000070  d0da              BEQ      |L2.40|
;;;68     		{
;;;69     			switch (cmd)
000072  f89d0000          LDRB     r0,[sp,#0]
000076  2831              CMP      r0,#0x31
000078  d00a              BEQ      |L2.144|
;;;70     			{
;;;71     				case '1':
;;;72     					if (g_tAD7606.Range == 0)
;;;73     					{
;;;74     						g_tAD7606.Range = 1;
;;;75     					}
;;;76     					else
;;;77     					{
;;;78     						g_tAD7606.Range = 0;
;;;79     					}
;;;80     					AD7606_SetInputRange(g_tAD7606.Range);
;;;81     					break;
;;;82     
;;;83     				default:
;;;84     					DispMenu();	/* 无效命令，重新打印命令提示 */
00007a  f7fffffe          BL       DispMenu
;;;85     					break;
00007e  e7d3              B        |L2.40|
                  |L2.128|
000080  f2413188          MOV      r1,#0x1388
000084  4348              MULS     r0,r1,r0
000086  fb90f1f6          SDIV     r1,r0,r6
00008a  f8281014          STRH     r1,[r8,r4,LSL #1]
00008e  e7e4              B        |L2.90|
                  |L2.144|
000090  7828              LDRB     r0,[r5,#0]            ;72  ; g_tAD7606
000092  b128              CBZ      r0,|L2.160|
000094  2000              MOVS     r0,#0                 ;78
000096  7028              STRB     r0,[r5,#0]            ;78
                  |L2.152|
000098  b2c0              UXTB     r0,r0                 ;80
00009a  f7fffffe          BL       AD7606_SetInputRange
00009e  e7c3              B        |L2.40|
                  |L2.160|
0000a0  4648              MOV      r0,r9                 ;74
0000a2  f8859000          STRB     r9,[r5,#0]            ;74
0000a6  e7f7              B        |L2.152|
;;;86     
;;;87     			}
;;;88     		}
;;;89     	}
;;;90     }
;;;91     
                          ENDP

                  |L2.168|
                          DCD      g_tAD7606
                  |L2.172|
                          DCD      ||.bss||

                          AREA ||i.DispMenu||, CODE, READONLY, ALIGN=2

                  DispMenu PROC
;;;167    */
;;;168    static void DispMenu(void)
000000  b510              PUSH     {r4,lr}
;;;169    {
;;;170    	printf("\r\n------------------------------------------------\r\n");
000002  a007              ADR      r0,|L3.32|
000004  f7fffffe          BL       __2printf
;;;171    	printf("请选择操作命令:\r\n");
000008  a013              ADR      r0,|L3.88|
00000a  f7fffffe          BL       __2printf
;;;172    	printf("1 - 切换量程(5V或10V)\r\n");
00000e  a017              ADR      r0,|L3.108|
000010  f7fffffe          BL       __2printf
;;;173    	printf("\r\n");
000014  e8bd4010          POP      {r4,lr}
000018  a01a              ADR      r0,|L3.132|
00001a  f7ffbffe          B.W      __2printf
;;;174    }
;;;175    
                          ENDP

00001e  0000              DCW      0x0000
                  |L3.32|
000020  0d0a2d2d          DCB      "\r\n------------------------------------------------\r\n"
000024  2d2d2d2d
000028  2d2d2d2d
00002c  2d2d2d2d
000030  2d2d2d2d
000034  2d2d2d2d
000038  2d2d2d2d
00003c  2d2d2d2d
000040  2d2d2d2d
000044  2d2d2d2d
000048  2d2d2d2d
00004c  2d2d2d2d
000050  2d2d0d0a
000054  00                DCB      0
000055  00                DCB      0
000056  00                DCB      0
000057  00                DCB      0
                  |L3.88|
000058  c7ebd1a1          DCB      199,235,209,161,212,241,178,217,215,247,195,252,193,238,":"
00005c  d4f1b2d9
000060  d7f7c3fc
000064  c1ee3a  
000067  0d0a00            DCB      "\r\n",0
00006a  00                DCB      0
00006b  00                DCB      0
                  |L3.108|
00006c  31202d20          DCB      "1 - ",199,208,187,187,193,191,179,204,"(5V",187,242,"10"
000070  c7d0bbbb
000074  c1bfb3cc
000078  283556bb
00007c  f23130  
00007f  56290d0a          DCB      "V)\r\n",0
000083  00      
                  |L3.132|
000084  0d0a00            DCB      "\r\n",0
000087  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  s_volt
                          %        16
                  s_dat
                          %        16

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\demo_spi_ad7606.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___17_demo_spi_ad7606_c_a4009e96____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___17_demo_spi_ad7606_c_a4009e96____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___17_demo_spi_ad7606_c_a4009e96____REVSH|
#line 128
|__asm___17_demo_spi_ad7606_c_a4009e96____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
